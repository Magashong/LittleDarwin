# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
   push:
     tags:
       - '*'



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
   deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*


   build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Get Version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

    - name: Set Up Python 3
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller setuptools wheel graphviz
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Run PyInstaller
      working-directory: $GITHUB_WORKSPACE
      shell: bash
      run: pyinstaller --onefile  ./LittleDarwin.py

    - name: Commit Changes
      shell: bash
      working-directory: $GITHUB_WORKSPACE
      run: |
        mkdir -p binaries/${{ steps.get_version.outputs.VERSION }}
        mv ./dist/LittleDarwin* ./binaries/${{ steps.get_version.outputs.VERSION }}
        git add ./binaries
        git commit -m Adding\ Binary\ Version\ ${{ steps.get_version.outputs.VERSION }}\ ${{ runner.os }}

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
