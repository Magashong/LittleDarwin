import os
import sys
import unittest
import tempfile
import base64
import zipfile
from io import BytesIO

from littledarwin import LittleDarwin


class TestLittleDarwin(unittest.TestCase):

    @classmethod
    def setUpClass(cls):
        cls.videostoreZipContentBase64 = b''
        cls.videostoreZipContent = BytesIO(base64.decodebytes(cls.videostoreZipContentBase64))

    def setUp(self) -> None:
        self.tempDir = tempfile.TemporaryDirectory()
        self.videoStoreSourcePath = os.path.join(self.tempDir.name, "videostore", "src", "main")
        self.videoStoreBuildPath = os.path.join(self.tempDir.name, "videostore")

        print("Created temp directory: " + str(self.tempDir.name) + ".")

        zipObj = zipfile.ZipFile(self.videostoreZipContent)
        zipObj.extractall(path=self.tempDir.name)
        print("Extracted \"VideoStore\" project.")

    def tearDown(self) -> None:
        self.tempDir.cleanup()
        print("Deleted temp directory.")

    def testVideoStoreGenerateTraditionalMutants(self):
        argList = ['-m', '-p', self.videoStoreSourcePath, '-t', self.videoStoreBuildPath]
        print("Running LittleDarwin with arguments:\n" + " ".join(argList))

        try:
            sys.exit(LittleDarwin.main(argList))
        except SystemExit as e:
            self.assertEqual(int(e.code), 0)

    def testVideoStoreTraditionalBuild(self):
        argList = ['-m', '-b', '-p', self.videoStoreSourcePath, '-t', self.videoStoreBuildPath, '-c', "mvn,clean,test"]
        print("Running LittleDarwin with arguments:\n" + " ".join(argList))

        try:
            sys.exit(LittleDarwin.main(argList))
        except SystemExit as e:
            self.assertEqual(int(e.code), 0)


if __name__ == '__main__':
    unittest.main()
